(()=>{"use strict";var e={188:(e,n,t)=>{t.d(n,{Z:()=>d});var i=t(537),a=t.n(i),r=t(645),o=t.n(r)()(a());o.push([e.id,'html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}.hide{display:none}.faded{color:rgba(0,0,0,.349)}.link{cursor:pointer}html{overflow-x:hidden;font-family:"Helvetica"}html body{width:100vw;max-width:100vw;height:100vh;min-height:100vh;overflow:hidden}html body .wrapper{width:100%;height:100%;margin:calc(.6*(1rem + 1vh + 1vw)) calc(.4*(1rem + 1vh + 1vw));display:flex;flex-direction:column}html body .wrapper header{min-width:100%;min-height:5vh;display:flex;justify-content:flex-start;margin-bottom:calc(.6*(1rem + 1vh + 1vw))}html body .wrapper header .ssbbd{cursor:pointer;font-size:calc(.8*(1rem + 1vh + 1vw));width:fit-content;display:grid;grid-template-areas:". s1 s2 hidden-b1 hidden-b2 hidden-d" "s3 b1 b2 d i o"}html body .wrapper header .ssbbd .letter{width:calc(.8*(1rem + 1vh + 1vw));height:calc(.8*(1rem + 1vh + 1vw));display:flex;justify-content:center;align-items:center}html body .wrapper header .ssbbd #s1{grid-area:s1}html body .wrapper header .ssbbd #s2{grid-area:s2}html body .wrapper header .ssbbd #hidden-b1{grid-area:hidden-b1}html body .wrapper header .ssbbd #hidden-b2{grid-area:hidden-b2}html body .wrapper header .ssbbd #hidden-d{grid-area:hidden-d}html body .wrapper header .ssbbd #s3{grid-area:s3}html body .wrapper header .ssbbd #b1{grid-area:b1}html body .wrapper header .ssbbd #b2{grid-area:b2}html body .wrapper header .ssbbd #d{grid-area:d}html body .wrapper header .ssbbd #i{grid-area:i}html body .wrapper header .ssbbd #o{grid-area:o}html body .wrapper main{display:flex;flex-direction:column;gap:calc(2*(1rem + 1vh + 1vw))}html body .wrapper main .menu-section{margin:0 calc(.8*(1rem + 1vh + 1vw));display:grid;grid-template-columns:1fr 1fr 2fr;grid-template-areas:"menu expansion-zone expanded-content";grid-column-gap:10px}html body .wrapper main .menu-section .menu,html body .wrapper main .menu-section .expansion-zone,html body .wrapper main .menu-section .expanded-content{display:grid;grid-template-rows:repeat(4, calc(1rem + 1vh + 1vw))}html body .wrapper main .menu-section .menu{grid-area:menu}html body .wrapper main .menu-section .menu .page-link{cursor:pointer;display:flex;justify-content:flex-end;align-items:center}html body .wrapper main .menu-section .expansion-zone{grid-area:expansion-zone}html body .wrapper main .menu-section .expansion-zone .expansion{display:grid;grid-template-columns:repeat(5, 1fr)}html body .wrapper main .menu-section .expansion-zone .expansion .expansion-step{display:flex;justify-content:center;align-items:center}html body .wrapper main .menu-section .expanded-content{grid-area:expanded-content}html body .wrapper main .menu-section .expanded-content .expanded-line{display:flex;justify-content:flex-start;align-items:center}@media(min-width: 600px){.link:hover{font-style:italic}}',"",{version:3,sources:["webpack://./src/style/meyer.scss","webpack://./src/style/index.scss"],names:[],mappings:"AAAA,2ZAaC,QAAA,CACA,SAAA,CACA,QAAA,CACA,cAAA,CACA,YAAA,CACA,uBAAA,CCDD,MACI,YAAA,CAGJ,OACI,sBAAA,CAGJ,MACI,cAAA,CAGJ,KACI,iBAAA,CACA,uBA3BS,CA6BT,UACI,WAAA,CACA,eAAA,CACA,YAAA,CACA,gBAAA,CAEA,eAAA,CAEA,mBACI,UAAA,CACA,WAAA,CACA,8DAlCE,CAmCF,YAAA,CACA,qBAAA,CAEA,0BACI,cAAA,CACA,cAAA,CACA,YAAA,CACA,0BAAA,CACA,yCA1CO,CA4CP,iCACI,cAAA,CACA,qCA7CX,CA8CW,iBAAA,CACA,YAAA,CACA,2EACI,CAGJ,yCACI,iCArDf,CAsDe,kCAtDf,CAuDe,YAAA,CACA,sBAAA,CACA,kBAAA,CAGJ,qCACI,YAAA,CAGJ,qCACI,YAAA,CAGJ,4CACI,mBAAA,CAGJ,4CACI,mBAAA,CAGJ,2CACI,kBAAA,CAGJ,qCACI,YAAA,CAGJ,qCACI,YAAA,CAGJ,qCACI,YAAA,CAGJ,oCACI,WAAA,CAGJ,oCACI,WAAA,CAGJ,oCACI,WAAA,CAKZ,wBACI,YAAA,CACA,qBAAA,CACA,8BA3GD,CA6GC,sCACI,oCAAA,CACA,YAAA,CACA,iCAAA,CACA,0DAAA,CACA,oBAAA,CAEA,0JAGI,YAAA,CACA,oDAAA,CAGJ,4CACI,cAAA,CAEA,uDACI,cAAA,CACA,YAAA,CACA,wBAAA,CACA,kBAAA,CAIR,sDACI,wBAAA,CAEA,iEACI,YAAA,CACA,oCAAA,CAEA,iFACI,YAAA,CACA,sBAAA,CACA,kBAAA,CAKZ,wDACI,0BAAA,CAEA,uEACI,YAAA,CACA,0BAAA,CACA,kBAAA,CAU5B,yBAEI,YACI,iBAAA,CAAA",sourcesContent:["html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}",'@use \'meyer\';\n$rvv: calc(1rem + 1vh + 1vw);\n\n// fonts:\n$font-stack: \'Helvetica\';\n\n// colors:\n$green: #20C20E;\n\n// dimensions:\n$body-margin: calc(0.6*$rvv) calc(0.4*$rvv);\n$header-margin-bottom: calc(0.6*$rvv);\n$letter: calc(0.8*$rvv);\n$menu-gap: calc(0.3*$rvv);\n$mid-page-gap: calc(2*$rvv);\n$ssbbd-font-size: $letter;\n\n.hide {\n    display: none;\n}\n\n.faded {\n    color: rgba(0, 0, 0, 0.349);\n}\n\n.link {\n    cursor: pointer;\n}\n\nhtml {\n    overflow-x: hidden;\n    font-family: $font-stack;\n\n    body {\n        width: 100vw;\n        max-width: 100vw;\n        height: 100vh;\n        min-height: 100vh;\n        \n        overflow: hidden;\n    \n        .wrapper {\n            width: 100%;\n            height: 100%;\n            margin: $body-margin;\n            display: flex;\n            flex-direction: column;\n    \n            header {\n                min-width: 100%;\n                min-height: 5vh;\n                display: flex;\n                justify-content: flex-start;\n                margin-bottom: $header-margin-bottom;\n\n                .ssbbd {\n                    cursor: pointer;\n                    font-size: $ssbbd-font-size;\n                    width: fit-content;\n                    display: grid;\n                    grid-template-areas: \n                        ". s1 s2 hidden-b1 hidden-b2 hidden-d"\n                        "s3 b1 b2 d i o";\n\n                    .letter {\n                        width: $letter;\n                        height: $letter;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                    }\n\n                    #s1 {\n                        grid-area: s1;\n                    }\n\n                    #s2 {\n                        grid-area: s2;\n                    }\n\n                    #hidden-b1 {\n                        grid-area: hidden-b1;\n                    }\n\n                    #hidden-b2 {\n                        grid-area: hidden-b2;\n                    }\n\n                    #hidden-d {\n                        grid-area: hidden-d;\n                    }\n \n                    #s3 {\n                        grid-area: s3;\n                    }\n\n                    #b1 {\n                        grid-area: b1;\n                    }\n\n                    #b2 {\n                        grid-area: b2;\n                    }\n\n                    #d {\n                        grid-area: d;\n                    }\n\n                    #i {\n                        grid-area: i;\n                    }\n\n                    #o {\n                        grid-area: o;\n                    }\n                }\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                gap: $mid-page-gap;\n\n                .menu-section {\n                    margin: 0 $letter;\n                    display: grid;\n                    grid-template-columns: 1fr 1fr 2fr;\n                    grid-template-areas: "menu expansion-zone expanded-content";\n                    grid-column-gap: 10px;\n\n                    .menu,\n                    .expansion-zone,\n                    .expanded-content {\n                        display: grid;\n                        grid-template-rows: repeat(4, $rvv);\n                    }\n\n                    .menu {\n                        grid-area: menu;\n\n                        .page-link {\n                            cursor: pointer;\n                            display: flex;\n                            justify-content: flex-end;\n                            align-items: center;\n                        }\n                    }\n\n                    .expansion-zone {\n                        grid-area: expansion-zone;\n\n                        .expansion {\n                            display: grid;\n                            grid-template-columns: repeat(5, 1fr);\n\n                            .expansion-step {\n                                display: flex;\n                                justify-content: center;\n                                align-items: center;\n                            }\n                        }\n                    }\n\n                    .expanded-content {\n                        grid-area: expanded-content;\n\n                        .expanded-line {\n                            display: flex;\n                            justify-content: flex-start;\n                            align-items: center;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// desktop rules:\n@media (min-width: 600px) {\n    \n    .link:hover {\n        font-style: italic;\n    }           \n \n}'],sourceRoot:""}]);const d=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",i=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),i&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),i&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,i,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(i)for(var d=0;d<this.length;d++){var s=this[d][0];null!=s&&(o[s]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);i&&o[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(a," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,i=0;i<n.length;i++)if(n[i].identifier===e){t=i;break}return t}function i(e,i){for(var r={},o=[],d=0;d<e.length;d++){var s=e[d],c=i.base?s[0]+i.base:s[0],l=r[c]||0,A="".concat(c," ").concat(l);r[c]=l+1;var p=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=a(u,i);i.byIndex=d,n.splice(d,0,{identifier:A,updater:m,references:1})}o.push(A)}return o}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var r=i(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<r.length;o++){var d=t(r[o]);n[d].references--}for(var s=i(e,a),c=0;c<r.length;c++){var l=t(r[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}r=s}}},569:e=>{var n={};e.exports=function(e,t){var i=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var i="";t.supports&&(i+="@supports (".concat(t.supports,") {")),t.media&&(i+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(i+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),i+=t.css,a&&(i+="}"),t.media&&(i+="}"),t.supports&&(i+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(i,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(i){var a=n[i];if(void 0!==a)return a.exports;var r=n[i]={id:i,exports:{}};return e[i](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var i in n)t.o(n,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:n[i]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),i=t(795),a=t.n(i),r=t(569),o=t.n(r),d=t(565),s=t.n(d),c=t(216),l=t.n(c),A=t(589),p=t.n(A),u=t(188),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=o().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=l(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const C=function(){alert("background")},h=function(){alert("contact")},b=function(){alert("extras")},v="50";function f(e,n){const t=document.querySelector(n),i=document.createElement("span");i.textContent=e,t.appendChild(i)}const g=function(){"work"!==localStorage.getItem("menuExpansion")&&(f("=",".work-expansion-step-1"),setTimeout((()=>{f("=",".work-expansion-step-2"),setTimeout((()=>{f("=",".work-expansion-step-3"),setTimeout((()=>{f(">",".work-expansion-step-4"),setTimeout((()=>{f("{",".work-expansion-step-5"),document.querySelector(".expanded-line-1").innerHTML='<span class="link web-link">web</span>',setTimeout((()=>{document.querySelector(".expanded-line-2").innerHTML='<span class="link cooking-link">cooking</span>',setTimeout((()=>{document.querySelector(".expanded-line-3").innerHTML='<span class="link visual-link">visual</span>',setTimeout((()=>{document.querySelector(".expanded-line-4").innerHTML='<span class="link writing-link">writing</span>'}),v)}),v)}),v)}),v)}),v)}),v)}),v),localStorage.setItem("menuExpansion","work"))};function y(){document.querySelector("#s1").classList.remove("faded"),document.querySelector("#s2").classList.remove("faded"),document.querySelector("#hidden-b1").textContent="",document.querySelector("#hidden-b2").textContent="",document.querySelector("#hidden-d").textContent="",document.querySelector("#s3").textContent="",document.querySelector("#b1").textContent="b",document.querySelector("#b2").textContent="b",document.querySelector("#i").textContent="",document.querySelector("#o").textContent=""}document.body.innerHTML='<div class="wrapper"> <header> <div class="ssbbd"> <span class="letter first-line" id="s1">s</span> <span class="letter first-line" id="s2">s</span> <span class="letter first-line faded" id="hidden-b1"></span> <span class="letter first-line faded" id="hidden-b2"></span> <span class="letter first-line faded" id="hidden-d"></span> <span class="letter" id="s3"></span> <span class="letter" id="b1">b</span> <span class="letter" id="b2">b</span> <span class="letter" id="d">d</span> <span class="letter" id="i"></span> <span class="letter" id="o"></span> </div> </header> <main> <div class="menu-section"> <div class="menu"> <div class="link page-link work-link">work</div> <div class="link page-link background-link">background</div> <div class="link page-link contact-link">contact</div> <div class="link page-link extras-link">extras</div> </div> <div class="expansion-zone"> <div class="expansion work-expansion"> <div class="work-expansion-step-1 expansion-step"></div> <div class="work-expansion-step-2 expansion-step"></div> <div class="work-expansion-step-3 expansion-step"></div> <div class="work-expansion-step-4 expansion-step"></div> <div class="work-expansion-step-5 expansion-step"></div> </div> <div class="expansion background-expansion"></div> <div class="expansion contact-expansion"></div> <div class="expansion extras-expansion"></div> </div> <div class="expanded-content"> <div class="expanded-line expanded-line-1"></div> <div class="expanded-line expanded-line-2"></div> <div class="expanded-line expanded-line-3"></div> <div class="expanded-line expanded-line-4"></div> </div> </div> <div class="lower-section"> lower contents </div> </main> </div>',document.querySelector(".ssbbd").addEventListener("mouseover",(function(){document.querySelector("#s1").classList.add("faded"),document.querySelector("#s2").classList.add("faded"),document.querySelector("#hidden-b1").textContent="b",document.querySelector("#hidden-b2").textContent="b",document.querySelector("#hidden-d").textContent="d",document.querySelector("#s3").textContent="s",document.querySelector("#b1").textContent="t",document.querySelector("#b2").textContent="u",document.querySelector("#i").textContent="i",document.querySelector("#o").textContent="o",document.querySelector(".ssbbd").addEventListener("mouseout",y,{once:!0})})),document.querySelector(".work-link").addEventListener("click",g),document.querySelector(".background-link").addEventListener("click",C),document.querySelector(".contact-link").addEventListener("click",h),document.querySelector(".extras-link").addEventListener("click",b)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,