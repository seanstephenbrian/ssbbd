(()=>{"use strict";var e={188:(e,n,t)=>{t.d(n,{Z:()=>d});var r=t(537),i=t.n(r),a=t(645),o=t.n(a)()(i());o.push([e.id,'html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}.hide{display:none}.faded{color:rgba(0,0,0,.349)}.link{cursor:pointer}html{overflow-x:hidden;font-family:"Helvetica"}html body{width:100vw;max-width:100vw;height:100vh;min-height:100vh;overflow:hidden;background:#d97c89;background:linear-gradient(135deg, rgba(217, 124, 137, 0.6027004552) 0%, rgba(201, 67, 67, 0.6363139006) 100%)}html body .wrapper{width:100%;height:100%;margin:calc(.6*(1rem + 1vh + 1vw)) calc(.4*(1rem + 1vh + 1vw));display:flex;flex-direction:column}html body .wrapper header{min-width:100%;min-height:5vh;display:flex;justify-content:flex-start;margin-bottom:calc(.6*(1rem + 1vh + 1vw))}html body .wrapper header .ssbbd{cursor:pointer;font-size:calc(.8*(1rem + 1vh + 1vw));width:fit-content;display:grid;grid-template-areas:". s1 s2 hidden-b1 hidden-b2 hidden-d" "s3 b1 b2 d i o"}html body .wrapper header .ssbbd .letter{width:calc(.8*(1rem + 1vh + 1vw));height:calc(.8*(1rem + 1vh + 1vw));display:flex;justify-content:center;align-items:center}html body .wrapper header .ssbbd #s1{grid-area:s1}html body .wrapper header .ssbbd #s2{grid-area:s2}html body .wrapper header .ssbbd #hidden-b1{grid-area:hidden-b1}html body .wrapper header .ssbbd #hidden-b2{grid-area:hidden-b2}html body .wrapper header .ssbbd #hidden-d{grid-area:hidden-d}html body .wrapper header .ssbbd #s3{grid-area:s3}html body .wrapper header .ssbbd #b1{grid-area:b1}html body .wrapper header .ssbbd #b2{grid-area:b2}html body .wrapper header .ssbbd #d{grid-area:d}html body .wrapper header .ssbbd #i{grid-area:i}html body .wrapper header .ssbbd #o{grid-area:o}html body .wrapper main{display:flex;flex-direction:column;gap:calc(2*(1rem + 1vh + 1vw))}html body .wrapper main .menu-section{margin:0 calc(.8*(1rem + 1vh + 1vw));display:grid;grid-template-columns:1fr 1fr 2fr;grid-template-areas:"menu expansion-zone expanded-content";grid-column-gap:10px}html body .wrapper main .menu-section .menu,html body .wrapper main .menu-section .expansion-zone,html body .wrapper main .menu-section .expanded-content{display:grid;grid-template-rows:repeat(4, calc(1rem + 1vh + 1vw))}html body .wrapper main .menu-section .menu{grid-area:menu}html body .wrapper main .menu-section .menu .page-link{cursor:pointer;display:flex;justify-content:flex-end;align-items:center}html body .wrapper main .menu-section .expansion-zone{grid-area:expansion-zone}html body .wrapper main .menu-section .expansion-zone .expansion{display:grid;grid-template-columns:repeat(5, 1fr)}html body .wrapper main .menu-section .expansion-zone .expansion .expansion-step{display:flex;justify-content:center;align-items:center}html body .wrapper main .menu-section .expanded-content{grid-area:expanded-content}html body .wrapper main .menu-section .expanded-content .expanded-line{display:flex;justify-content:flex-start;align-items:center}@media(min-width: 600px){.link:hover{font-style:italic}}',"",{version:3,sources:["webpack://./src/style/meyer.scss","webpack://./src/style/index.scss"],names:[],mappings:"AAAA,2ZAaC,QAAA,CACA,SAAA,CACA,QAAA,CACA,cAAA,CACA,YAAA,CACA,uBAAA,CCDD,MACI,YAAA,CAGJ,OACI,sBAAA,CAGJ,MACI,cAAA,CAGJ,KACI,iBAAA,CACA,uBA3BS,CA6BT,UACI,WAAA,CACA,eAAA,CACA,YAAA,CACA,gBAAA,CACA,eAAA,CACA,kBAAA,CACA,8GAAA,CAEA,mBACI,UAAA,CACA,WAAA,CACA,8DAnCE,CAoCF,YAAA,CACA,qBAAA,CAEA,0BACI,cAAA,CACA,cAAA,CACA,YAAA,CACA,0BAAA,CACA,yCA3CO,CA6CP,iCACI,cAAA,CACA,qCA9CX,CA+CW,iBAAA,CACA,YAAA,CACA,2EACI,CAGJ,yCACI,iCAtDf,CAuDe,kCAvDf,CAwDe,YAAA,CACA,sBAAA,CACA,kBAAA,CAGJ,qCACI,YAAA,CAGJ,qCACI,YAAA,CAGJ,4CACI,mBAAA,CAGJ,4CACI,mBAAA,CAGJ,2CACI,kBAAA,CAGJ,qCACI,YAAA,CAGJ,qCACI,YAAA,CAGJ,qCACI,YAAA,CAGJ,oCACI,WAAA,CAGJ,oCACI,WAAA,CAGJ,oCACI,WAAA,CAKZ,wBACI,YAAA,CACA,qBAAA,CACA,8BA5GD,CA8GC,sCACI,oCAAA,CACA,YAAA,CACA,iCAAA,CACA,0DAAA,CACA,oBAAA,CAEA,0JAGI,YAAA,CACA,oDAAA,CAGJ,4CACI,cAAA,CAEA,uDACI,cAAA,CACA,YAAA,CACA,wBAAA,CACA,kBAAA,CAIR,sDACI,wBAAA,CAEA,iEACI,YAAA,CACA,oCAAA,CAEA,iFACI,YAAA,CACA,sBAAA,CACA,kBAAA,CAKZ,wDACI,0BAAA,CAEA,uEACI,YAAA,CACA,0BAAA,CACA,kBAAA,CAU5B,yBAEI,YACI,iBAAA,CAAA",sourcesContent:["html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}",'@use \'meyer\';\n$rvv: calc(1rem + 1vh + 1vw);\n\n// fonts:\n$font-stack: \'Helvetica\';\n\n// colors:\n$green: #20C20E;\n\n// dimensions:\n$body-margin: calc(0.6*$rvv) calc(0.4*$rvv);\n$header-margin-bottom: calc(0.6*$rvv);\n$letter: calc(0.8*$rvv);\n$menu-gap: calc(0.3*$rvv);\n$mid-page-gap: calc(2*$rvv);\n$ssbbd-font-size: $letter;\n\n.hide {\n    display: none;\n}\n\n.faded {\n    color: rgba(0, 0, 0, 0.349);\n}\n\n.link {\n    cursor: pointer;\n}\n\nhtml {\n    overflow-x: hidden;\n    font-family: $font-stack;\n\n    body {\n        width: 100vw;\n        max-width: 100vw;\n        height: 100vh;\n        min-height: 100vh;\n        overflow: hidden;\n        background: rgb(217,124,137);\n        background: linear-gradient(135deg, rgba(217,124,137,0.6027004551820728) 0%, rgba(201,67,67,0.6363139005602241) 100%);\n    \n        .wrapper {\n            width: 100%;\n            height: 100%;\n            margin: $body-margin;\n            display: flex;\n            flex-direction: column;\n    \n            header {\n                min-width: 100%;\n                min-height: 5vh;\n                display: flex;\n                justify-content: flex-start;\n                margin-bottom: $header-margin-bottom;\n\n                .ssbbd {\n                    cursor: pointer;\n                    font-size: $ssbbd-font-size;\n                    width: fit-content;\n                    display: grid;\n                    grid-template-areas: \n                        ". s1 s2 hidden-b1 hidden-b2 hidden-d"\n                        "s3 b1 b2 d i o";\n\n                    .letter {\n                        width: $letter;\n                        height: $letter;\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                    }\n\n                    #s1 {\n                        grid-area: s1;\n                    }\n\n                    #s2 {\n                        grid-area: s2;\n                    }\n\n                    #hidden-b1 {\n                        grid-area: hidden-b1;\n                    }\n\n                    #hidden-b2 {\n                        grid-area: hidden-b2;\n                    }\n\n                    #hidden-d {\n                        grid-area: hidden-d;\n                    }\n \n                    #s3 {\n                        grid-area: s3;\n                    }\n\n                    #b1 {\n                        grid-area: b1;\n                    }\n\n                    #b2 {\n                        grid-area: b2;\n                    }\n\n                    #d {\n                        grid-area: d;\n                    }\n\n                    #i {\n                        grid-area: i;\n                    }\n\n                    #o {\n                        grid-area: o;\n                    }\n                }\n            }\n\n            main {\n                display: flex;\n                flex-direction: column;\n                gap: $mid-page-gap;\n\n                .menu-section {\n                    margin: 0 $letter;\n                    display: grid;\n                    grid-template-columns: 1fr 1fr 2fr;\n                    grid-template-areas: "menu expansion-zone expanded-content";\n                    grid-column-gap: 10px;\n\n                    .menu,\n                    .expansion-zone,\n                    .expanded-content {\n                        display: grid;\n                        grid-template-rows: repeat(4, $rvv);\n                    }\n\n                    .menu {\n                        grid-area: menu;\n\n                        .page-link {\n                            cursor: pointer;\n                            display: flex;\n                            justify-content: flex-end;\n                            align-items: center;\n                        }\n                    }\n\n                    .expansion-zone {\n                        grid-area: expansion-zone;\n\n                        .expansion {\n                            display: grid;\n                            grid-template-columns: repeat(5, 1fr);\n\n                            .expansion-step {\n                                display: flex;\n                                justify-content: center;\n                                align-items: center;\n                            }\n                        }\n                    }\n\n                    .expanded-content {\n                        grid-area: expanded-content;\n\n                        .expanded-line {\n                            display: flex;\n                            justify-content: flex-start;\n                            align-items: center;\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// desktop rules:\n@media (min-width: 600px) {\n    \n    .link:hover {\n        font-style: italic;\n    }           \n \n}'],sourceRoot:""}]);const d=o},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,i,a){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var d=0;d<this.length;d++){var s=this[d][0];null!=s&&(o[s]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&o[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},o=[],d=0;d<e.length;d++){var s=e[d],c=r.base?s[0]+r.base:s[0],l=a[c]||0,A="".concat(c," ").concat(l);a[c]=l+1;var p=t(A),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=i(u,r);r.byIndex=d,n.splice(d,0,{identifier:A,updater:m,references:1})}o.push(A)}return o}function i(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,i){var a=r(e=e||[],i=i||{});return function(e){e=e||[];for(var o=0;o<a.length;o++){var d=t(a[o]);n[d].references--}for(var s=r(e,i),c=0;c<a.length;c++){var l=t(a[c]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var i=void 0!==t.layer;i&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,i&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var i=n[r];if(void 0!==i)return i.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),i=t.n(r),a=t(569),o=t.n(a),d=t(565),s=t.n(d),c=t(216),l=t.n(c),A=t(589),p=t.n(A),u=t(188),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=o().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=l(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const C=function(e,n){const t=document.querySelector(n),r=document.createElement("span");r.textContent=e,t.appendChild(r)},h=function(e,n,t,r){document.querySelector(".lower-section").innerHTML="","<span>=</span>"!==document.querySelector(`.${e}-expansion-step-1`).innerHTML&&(C(r[0],`.${e}-expansion-step-1`),setTimeout((()=>{C(r[1],`.${e}-expansion-step-2`),setTimeout((()=>{C(r[2],`.${e}-expansion-step-3`),setTimeout((()=>{C(r[3],`.${e}-expansion-step-4`),setTimeout((()=>{C(r[4],`.${e}-expansion-step-5`),n(t)}),t)}),t)}),t)}),t))},b=function(){document.querySelectorAll(".expansion").forEach((e=>{e.innerHTML=""})),document.querySelectorAll(".expanded-line").forEach((e=>{e.innerHTML=""}))},f=function(e){return`\n        <div class="${e}-expansion-step-1 expansion-step"></div>\n        <div class="${e}-expansion-step-2 expansion-step"></div>\n        <div class="${e}-expansion-step-3 expansion-step"></div>\n        <div class="${e}-expansion-step-4 expansion-step"></div>\n        <div class="${e}-expansion-step-5 expansion-step"></div>\n    `};function v(){document.querySelector(".expanded-line-2").textContent="▪";const e=document.querySelector(".expanded-line-3"),n=document.querySelector(".expanded-line-4");setTimeout((()=>{e.textContent="||",setTimeout((()=>{n.textContent="V"}),"200")}),"200")}const y=function(){b(),document.querySelector(".background-expansion").innerHTML=f("background"),h("background",v,"100","=====")};function g(){}const x=function(){b(),document.querySelector(".contact-expansion").innerHTML=f("contact"),h("contact",g,"50","====>")};function w(){}const k=function(){b(),document.querySelector(".extras-expansion").innerHTML=f("extras"),h("extras",w,"50","↓!↓!↓")},q=function(){document.querySelector(".lower-section").textContent="web"},S=function(){document.querySelector(".lower-section").textContent="cooking"},I=function(){document.querySelector(".lower-section").textContent="photo"},E=function(){document.querySelector(".lower-section").textContent="other"};function $(e){const n=document.querySelector(".expanded-line-1"),t=document.createElement("span");t.classList.add("link","web-link"),t.textContent="web",n.appendChild(t),t.addEventListener("click",q),setTimeout((()=>{!function(e){const n=document.querySelector(".expanded-line-2"),t=document.createElement("span");t.classList.add("link","cooking-link"),t.textContent="cooking",n.appendChild(t),t.addEventListener("click",S),setTimeout((()=>{!function(e){const n=document.querySelector(".expanded-line-3"),t=document.createElement("span");t.classList.add("link","photo-link"),t.textContent="photo",n.appendChild(t),t.addEventListener("click",I),setTimeout((()=>{!function(){const e=document.querySelector(".expanded-line-4"),n=document.createElement("span");n.classList.add("link","other-link"),n.textContent="other",e.appendChild(n),n.addEventListener("click",E)}()}),e)}(e)}),e)}(e)}),e)}const B=function(){b(),document.querySelector(".work-expansion").innerHTML=f("work"),h("work",$,"50","===>{")};function L(){document.querySelector("#s1").classList.remove("faded"),document.querySelector("#s2").classList.remove("faded"),document.querySelector("#hidden-b1").textContent="",document.querySelector("#hidden-b2").textContent="",document.querySelector("#hidden-d").textContent="",document.querySelector("#s3").textContent="",document.querySelector("#b1").textContent="b",document.querySelector("#b2").textContent="b",document.querySelector("#i").textContent="",document.querySelector("#o").textContent=""}document.body.innerHTML='<div class="wrapper"> <header> <div class="ssbbd"> <span class="letter first-line" id="s1">s</span> <span class="letter first-line" id="s2">s</span> <span class="letter first-line faded" id="hidden-b1"></span> <span class="letter first-line faded" id="hidden-b2"></span> <span class="letter first-line faded" id="hidden-d"></span> <span class="letter" id="s3"></span> <span class="letter" id="b1">b</span> <span class="letter" id="b2">b</span> <span class="letter" id="d">d</span> <span class="letter" id="i"></span> <span class="letter" id="o"></span> </div> </header> <main> <div class="menu-section"> <div class="menu"> <div class="link page-link work-link">work</div> <div class="link page-link background-link">background</div> <div class="link page-link contact-link">contact</div> <div class="link page-link extras-link">extras</div> </div> <div class="expansion-zone"> <div class="expansion work-expansion"></div> <div class="expansion background-expansion"></div> <div class="expansion contact-expansion"></div> <div class="expansion extras-expansion"></div> </div> <div class="expanded-content"> <div class="expanded-line expanded-line-1"></div> <div class="expanded-line expanded-line-2"></div> <div class="expanded-line expanded-line-3"></div> <div class="expanded-line expanded-line-4"></div> </div> </div> <div class="lower-section"> lower contents </div> </main> </div>',document.querySelector(".ssbbd").addEventListener("mouseover",(function(){document.querySelector("#s1").classList.add("faded"),document.querySelector("#s2").classList.add("faded"),document.querySelector("#hidden-b1").textContent="b",document.querySelector("#hidden-b2").textContent="b",document.querySelector("#hidden-d").textContent="d",document.querySelector("#s3").textContent="s",document.querySelector("#b1").textContent="t",document.querySelector("#b2").textContent="u",document.querySelector("#i").textContent="i",document.querySelector("#o").textContent="o",document.querySelector(".ssbbd").addEventListener("mouseout",L,{once:!0})})),document.querySelector(".work-link").addEventListener("click",B),document.querySelector(".background-link").addEventListener("click",y),document.querySelector(".contact-link").addEventListener("click",x),document.querySelector(".extras-link").addEventListener("click",k)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,